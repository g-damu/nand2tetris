// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
/*

*/

//DMux8Way16(in=in,sel=address,a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
DMux8Way(in=load,sel=address,a=l0,b=l1,c=l2,d=l3,e=l4,f=l5,g=l6,h=l7);

/*Register(in=r0,load=l0,out=rout0);
Register(in=r1,load=l1,out=rout1);
Register(in=r2,load=l2,out=rout2);
Register(in=r3,load=l3,out=rout3);
Register(in=r4,load=l4,out=rout4);
Register(in=r5,load=l5,out=rout5);
Register(in=r6,load=l6,out=rout6);
Register(in=r7,load=l7,out=rout7);*/

Register(in=in,load=l0,out=rout0);
Register(in=in,load=l1,out=rout1);
Register(in=in,load=l2,out=rout2);
Register(in=in,load=l3,out=rout3);
Register(in=in,load=l4,out=rout4);
Register(in=in,load=l5,out=rout5);
Register(in=in,load=l6,out=rout6);
Register(in=in,load=l7,out=rout7);



Mux8Way16(a=rout0,b=rout1,c=rout2,d=rout3,e=rout4,f=rout5,g=rout6,h=rout7,sel=address,out=out);



}