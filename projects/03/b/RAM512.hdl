// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:

DMux8Way(in=load,sel=address[6..8],a=l0,b=l1,c=l2,d=l3,e=l4,f=l5,g=l6,h=l7);	
	
RAM64(in=in,out=ram64out0,address=address[0..5],load=l0);
RAM64(in=in,out=ram64out1,address=address[0..5],load=l1);
RAM64(in=in,out=ram64out2,address=address[0..5],load=l2);
RAM64(in=in,out=ram64out3,address=address[0..5],load=l3);
RAM64(in=in,out=ram64out4,address=address[0..5],load=l4);
RAM64(in=in,out=ram64out5,address=address[0..5],load=l5);
RAM64(in=in,out=ram64out6,address=address[0..5],load=l6);
RAM64(in=in,out=ram64out7,address=address[0..5],load=l7);

Mux8Way16(a=ram64out0,b=ram64out1,c=ram64out2,d=ram64out3,e=ram64out4,f=ram64out5,g=ram64out6,h=ram64out7,sel=address[6..8],out=out);

}